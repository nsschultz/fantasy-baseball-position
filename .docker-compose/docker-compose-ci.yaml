version: "3.8"
services:
  api:
    build:
      context: ../
      dockerfile: Dockerfile
      target: dev
    command: sh /app/.docker-compose/scripts/scan.sh
    depends_on:
      database:
        condition: service_healthy
    environment:
      - ASPNETCORE_URLS=http://+:8080
      - POSITION_DATABASE=position_database
      - POSITION_DATABASE_HOST=database
      - POSITION_DATABASE_PASSWORD=postgres
      - POSITION_DATABASE_USER=postgres
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - SONAR_TOKEN=${SONAR_TOKEN}
    volumes:
      - ../:/app/
  database:
    build: database/
    restart: always
    user: postgres
    environment:
      - POSTGRES_DB=position_database
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 60s
      timeout: 30s
      retries: 5
    volumes:
      - data_volume:/var/lib/postgresql/data
volumes:
  data_volume:
